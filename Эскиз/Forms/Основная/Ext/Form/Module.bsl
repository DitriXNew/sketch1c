
// Если ТекущиеДанные.Тип = Контейнер, тогда добавить в него. А если Не контейнер, то добавить рядом, но только то что доступно родителю!

&НаКлиенте
Перем МенеджерПроекта;

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СоздатьНовыйПроект();
	ОпределитьВидимостьПодсказокКоманд(Ложь);
	СкрытьВсеСтраницыКромеТекущей();

	//todo:
	//ИсходнаяСтруктура = Новый Структура;
	//ИсходнаяСтруктура.Вставить("Проект", "Проект");
	//ИсходнаяСтруктура.Вставить("Форма", "Форма");
	//ИсходнаяСтруктура.Вставить("Группа", "Группа");
	//ИсходнаяСтруктура.Вставить("Поле", "Поле");
	//ИсходнаяСтруктура.Вставить("Кнопку", "Кнопку");
	//ИсходнаяСтруктура.Вставить("Таблица", "Таблица");
	//ИсходнаяСтруктура.Вставить("Декорация", "Декорация");
	//
	//Типы = Новый ФиксированнаяСтруктура(ИсходнаяСтруктура);
	
	//todo:
	//НоваяСтрока = ФормыИЭлементыУправления.ПолучитьЭлементы().Добавить();
	//НоваяСтрока.Имя = "Проект";
	//НоваяСтрока.Тип = Типы.Проект;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовыйПроект() 
	МенеджерПроекта = ПолучитьФорму("ВнешняяОбработка.Эскиз.Форма.Проект");
	МенеджерПроекта.Создать();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПроект(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПроектЗавершение", ЭтотОбъект);
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПроектЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Файл проекта не выбран.";
		Сообщение.Сообщить();	
		
		Возврат;
	КонецЕсли;
	
	РасположениеПроекта = ВыбранныеФайлы[0];
	
	МенеджерПроекта.Загрузить(РасположениеПроекта, ЭтаФорма);
	
	ОбновитьДеревоФормИЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПроект(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПроектЗавершение", ЭтотОбъект);
	НачатьЗапускПриложения(ОписаниеОповещения, РасположениеПроекта);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПроектЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
	//	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПроект(Команда)
	Если ПустаяСтрока(РасположениеПроекта) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("СохранитьПроектЗавершение", ЭтотОбъект);
		
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ДиалогВыбораФайла.Расширение = "json";
		ДиалогВыбораФайла.Фильтр = "json|*.json";
		ДиалогВыбораФайла.Показать(ОписаниеОповещения);
		
	Иначе
		МенеджерПроекта.Сохранить(РасположениеПроекта);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПроектЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Файл проекта не выбран.";
		Сообщение.Сообщить();	
		
		Возврат;
	КонецЕсли;
	
	РасположениеПроекта = ВыбранныеФайлы[0];
	
	МенеджерПроекта.Сохранить(РасположениеПроекта);
	
КонецПроцедуры

&НаКлиенте                                         
Процедура РасположениеПроектаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если ПустаяСтрока(РасположениеПроекта) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("РасположениеПроектаОчисткаЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Поле ""Проект"" будет очищено! Продолжить?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет, "Эскиз", КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура РасположениеПроектаОчисткаЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		РасположениеПроекта = "";
		
		СоздатьНовыйПроект();
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФорму(Команда)
	НоваяСтрока = ФормыИЭлементыУправления.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ИндексКартинки = 0;
	
	НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Форма");
	НоваяСтрока.Имя = НовоеИмя;
	НоваяСтрока.Заголовок = НовоеИмя;
	НоваяСтрока.Тип = МенеджерПроекта.Типы().ФормаКлиентскогоПриложения;
	НоваяСтрока.Идентификатор = Новый УникальныйИдентификатор;
	
	МенеджерПроекта.ОткрытьПрототип(НоваяСтрока, ЭтаФорма, Ложь);
	
	Элементы.ФормыИЭлементыУправления.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДеревоФормИЭлементов() 
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПрототип(Команда)
	ТекущиеДанные = Элементы.ФормыИЭлементыУправления.ТекущиеДанные;
	Если Ложь
		Или ТекущиеДанные = Неопределено
		Или ТекущиеДанные.Тип <> МенеджерПроекта.Типы().ФормаКлиентскогоПриложения
		Тогда
		
		ТекстСообщения = "Выберите (установите курсор) форму.";
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
		
		Возврат;
	КонецЕсли;
	
	МенеджерПроекта.ОткрытьПрототип(ТекущиеДанные, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьРоли(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрыФормыРолей = Новый Структура;
	ПараметрыФормыРолей.Вставить("РежимРедактированияРолей", Истина);
	ПараметрыФормыРолей.Вставить("ТекущаяРоль", ДанныеВыбора);
	
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("РедактироватьРолиЗавершение", ЭтотОбъект);
	ОткрытьФорму("ВнешняяОбработка.Эскиз.Форма.Роли", ПараметрыФормыРолей, Элементы.Роль,,,, ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьРолиЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Роль.СписокВыбора.ЗагрузитьЗначения(РезультатЗакрытия.ВыгрузитьЗначения());
	
КонецПроцедуры

&НаКлиенте
Процедура Предастройки(Команда)
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Группировки, сортировки, отборы, поиски!";
	Сообщение.Сообщить();	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоле(Команда)
	ДобавитьЭлементУправления(МенеджерПроекта.Типы().ПолеФормы, МенеджерПроекта.Виды().ПолеВвода);
	
	//ТекущиеДанные = Элементы.ФормыИЭлементыУправления.ТекущиеДанные;
	//Если Ложь
	//	Или ТекущиеДанные.Тип = МенеджерПроекта.Типы().ГруппаФормы
	//	Или ТекущиеДанные.Тип = МенеджерПроекта.Типы().ТаблицаФормы
	//	Или ТекущиеДанные.Тип = МенеджерПроекта.Типы().ФормаКлиентскогоПриложения
	//	Тогда
	//	
	//	Родитель = ТекущиеДанные;
	//	
	//Иначе
	//	Родитель = ТекущиеДанные.ПолучитьРодителя();
	//	
	//КонецЕсли;
	//
	//НоваяСтрока = Родитель.ПолучитьЭлементы().Добавить();
	//НоваяСтрока.ИндексКартинки = 3;
	//
	//НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Поле");
	//НоваяСтрока.Имя = НовоеИмя;
	//НоваяСтрока.ПутьКДанным = НовоеИмя;
	//НоваяСтрока.Заголовок = НовоеИмя;
	//
	//НоваяСтрока.Тип = МенеджерПроекта.Типы().ПолеФормы;
	//НоваяСтрока.ТипЗначения = МенеджерПроекта.ТипыЗначения().Строка;
	//
	//Если Не Родитель.Тип = МенеджерПроекта.Типы().ФормаКлиентскогоПриложения Тогда
	//	НоваяСтрока.Родитель = Родитель.Имя;
	//	
	//КонецЕсли;
	//
	//НоваяСтрока.Вид = МенеджерПроекта.Виды().ПолеВвода;
	//НоваяСтрока.Путь = "";
	//НоваяСтрока.Прототип = ПолучитьИмяПрототипаРекурсивно(Родитель);
	//
	//КлючНовогоПоля = "Имя,ПутьКДанным,Заголовок,Тип,ТипЗначения,Родитель,Вид,Путь,Прототип";
	//СвойстваПоля = Новый Структура(КлючНовогоПоля);
	//ЗаполнитьЗначенияСвойств(СвойстваПоля, НоваяСтрока);
	//
	//МенеджерПроекта.ДобавитьПоле(СвойстваПоля);
	//
	//Элементы.ФормыИЭлементыУправления.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	//
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИмяПрототипаРекурсивно(Элемент) 
	Результат = "";
	
	Родитель = Элемент.ПолучитьРодителя();
	Если Родитель = Неопределено Тогда
		Результат = Элемент.Имя;
		
	Иначе
		Результат = ПолучитьИмяПрототипаРекурсивно(Родитель);
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ФормыИЭлементыУправленияПриАктивизацииСтроки(Элемент)
	ОбработкаАктивизацииСтрокиФормИЭлементов();
	
	//---
	ТекущиеДанные = Элементы.ФормыИЭлементыУправления.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Элементы.ГруппаКоманды.ТекущаяСтраница = Элементы.ГруппаКоманды_НачалоРаботы;
		
	ИначеЕсли ТекущиеДанные.Тип = МенеджерПроекта.Типы().ГруппаФормы И ТекущиеДанные.Вид = МенеджерПроекта.Виды().Страницы Тогда
		Элементы.ГруппаКоманды.ТекущаяСтраница = Элементы.ГруппаКоманды_Страницы;
		
	ИначеЕсли ТекущиеДанные.Тип = МенеджерПроекта.Типы().ГруппаФормы И ТекущиеДанные.Вид = МенеджерПроекта.Виды().КоманднаяПанель Тогда
		Элементы.ГруппаКоманды.ТекущаяСтраница = Элементы.ГруппаКоманды_КоманднаяПанель;
		
	ИначеЕсли ТекущиеДанные.Тип = МенеджерПроекта.Типы().ТаблицаФормы Тогда
		Элементы.ГруппаКоманды.ТекущаяСтраница = Элементы.ГруппаКоманды_Таблица;
		
	ИначеЕсли ТекущиеДанные.Тип = МенеджерПроекта.Типы().ГруппаФормы И ТекущиеДанные.Вид = МенеджерПроекта.Виды().ГруппаКолонок Тогда
		Элементы.ГруппаКоманды.ТекущаяСтраница = Элементы.ГруппаКоманды_ГруппаКолонок;
		
	Иначе
		Элементы.ГруппаКоманды.ТекущаяСтраница = Элементы.ГруппаКоманды_Все;
		
	КонецЕсли;
	
	СкрытьВсеСтраницыКромеТекущей();
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьВсеСтраницыКромеТекущей() 
	ТекущаяСтраница = Элементы.ГруппаКоманды.ТекущаяСтраница;
	
	Страницы = Элементы.ГруппаКоманды.ПодчиненныеЭлементы;
	Для Каждого Страница Из Страницы Цикл
		Страница.Видимость = Страница = ТекущаяСтраница;
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАктивизацииСтрокиФормИЭлементов() Экспорт
	ТекущиеДанные = Элементы.ФормыИЭлементыУправления.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из СвойстваФормИЭлементовУправления Цикл
		Попытка
			Строка.Значение = ТекущиеДанные[Строка.Свойство];
			
		Исключение
			
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьСвойства();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСвойства() 
	СвойстваНаСервере = РеквизитФормыВЗначение("СвойстваФормИЭлементовУправления");
	
	//---
	ДобавитьСвойство(СвойстваНаСервере, "Заголовок", "Заголовок", "", Новый СписокЗначений);
	
	//---
	ДанныеВыбора = Новый Структура;
	ДанныеВыбора.Вставить("Вертикальная", "Вертикальная");
	ДанныеВыбора.Вставить("ГоризонтальнаяВсегда", "Горизонтальная всегда");
	ДанныеВыбора.Вставить("ГоризонтальнаяЕслиВозможно", "Горизонтальная если возможно");
	
	ДобавитьСвойство(СвойстваНаСервере, "Группировка", "Группировка", "Вертикальная", ДанныеВыбора);
	
	//---
	ДанныеВыбора = Новый Структура;
	ДанныеВыбора.Вставить("Да", "Да");
	ДанныеВыбора.Вставить("Нет", "Нет");
	
	ДобавитьСвойство(СвойстваНаСервере, "ОтображатьЗаголовок", "Отображать заголовок", "Да", ДанныеВыбора);
	
	//---
	ДанныеВыбора = Новый Структура;
	ДанныеВыбора.Вставить("Строка", "Строка");
	ДанныеВыбора.Вставить("Число", "Число");
	ДанныеВыбора.Вставить("Дата", "Дата");
	ДанныеВыбора.Вставить("Булево", "Булево");
	
	ДобавитьСвойство(СвойстваНаСервере, "Тип", "Тип", "Строка", ДанныеВыбора);
	
	
	
	
	
	
	ЗначениеВРеквизитФормы(СвойстваНаСервере, "СвойстваФормИЭлементовУправления");
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСвойство(СвойстваНаСервере, Свойство, Представление, Значение, ДанныеВыбора) 
	НоваяСтрока = СвойстваНаСервере.Добавить();
	НоваяСтрока.Свойство = Свойство;
	НоваяСтрока.Представление = Представление;
	НоваяСтрока.Значение = Значение;
	
	Для Каждого Пара Из ДанныеВыбора Цикл
		НоваяСтрока.ДанныеВыбора.Добавить(Пара.Ключ, Пара.Значение);
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПриИзменении(Элемент)
	ТекущиеДанныеПрототип = Элементы.ФормыИЭлементыУправления.ТекущиеДанные;
	Если ТекущиеДанныеПрототип = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанныеСвойств = Элементы.СвойстваФормИЭлементовУправления.ТекущиеДанные;
	Если ТекущиеДанныеСвойств = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанныеПрототип.Тип = МенеджерПроекта.Типы().ФормаКлиентскогоПриложения Тогда
		Прототип = ТекущиеДанныеПрототип.Имя;
		МенеджерПроекта.ИзменитьСвойство(Прототип, ТекущиеДанныеСвойств.Свойство, ТекущиеДанныеСвойств.Значение);
		
	Иначе
		Прототип = ПолучитьИмяПрототипаРекурсивно(ТекущиеДанныеПрототип);
		Если ТекущиеДанныеСвойств.Свойство = "Тип" Тогда
			
			
		Иначе
			МенеджерПроекта.ИзменитьСвойство(Прототип, ТекущиеДанныеСвойств.Свойство, ТекущиеДанныеСвойств.Значение, Ложь, ТекущиеДанныеПрототип.Имя);
			
		КонецЕсли;
	КонецЕсли;
	
	Если ТекущиеДанныеСвойств.Свойство = МенеджерПроекта.СвойстваФормИЭлементов().Заголовок Тогда
		ТекущиеДанныеПрототип.Заголовок = ТекущиеДанныеСвойств.Значение;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьЭлементМаркер() 
	Результат = Неопределено;
	
	ТекущиеДанные = Элементы.ФормыИЭлементыУправления.ТекущиеДанные;
	
	Родитель = ТекущиеДанные.ПолучитьРодителя();
	Если Родитель = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	ВзятьСледующий = Ложь;
	
	Стек = Родитель.ПолучитьЭлементы();
	Для Каждого Элемент Из Стек Цикл
		Если ВзятьСледующий Тогда
			Результат = Элемент.Заголовок;
			
			Прервать;
		ИначеЕсли Элемент.Имя = ТекущиеДанные.Имя Тогда
			ВзятьСледующий = Истина;
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;    
КонецФункции

&НаКлиенте
Процедура ДобавитьКоманднуюПанель(Команда)
	НоваяСтрока = ФормыИЭлементыУправления.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ИндексКартинки = 1;
	
	НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("КоманднаяПанель");
	НоваяСтрока.Имя = НовоеИмя;
	НоваяСтрока.Заголовок = НовоеИмя;
	
	НоваяСтрока.Тип = МенеджерПроекта.Типы().ГруппаФормы;
	НоваяСтрока.Вид = МенеджерПроекта.Виды().КоманднаяПанель;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьГруппу(Команда)
	ДобавитьЭлементУправления(МенеджерПроекта.Типы().ГруппаФормы, МенеджерПроекта.Виды().ОбычнаяГруппа);
	
	//ТекущиеДанные = Элементы.ФормыИЭлементыУправления.ТекущиеДанные;
	//Если Ложь
	//	Или ТекущиеДанные.Тип = МенеджерПроекта.Типы().ГруппаФормы
	//	Или ТекущиеДанные.Тип = МенеджерПроекта.Типы().ТаблицаФормы
	//	Или ТекущиеДанные.Тип = МенеджерПроекта.Типы().ФормаКлиентскогоПриложения
	//	Тогда
	//	
	//	Родитель = ТекущиеДанные;
	//	
	//Иначе
	//	Родитель = ТекущиеДанные.ПолучитьРодителя();
	//	
	//КонецЕсли;
	
	//НоваяСтрока = Родитель.ПолучитьЭлементы().Добавить();
	//НоваяСтрока.ИндексКартинки = 2;
	//
	//НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Группа");
	//НоваяСтрока.Имя = НовоеИмя;
	//НоваяСтрока.Заголовок = НовоеИмя;
	//
	//НоваяСтрока.Тип = МенеджерПроекта.Типы().ГруппаФормы;
	//НоваяСтрока.Вид = МенеджерПроекта.Виды().ОбычнаяГруппа;
	//
	//Если Не Родитель.Тип = МенеджерПроекта.Типы().ФормаКлиентскогоПриложения Тогда
	//	НоваяСтрока.Родитель = Родитель.Имя;
	//	
	//КонецЕсли;
	
	//НоваяСтрока.Прототип = ПолучитьИмяПрототипаРекурсивно(Родитель);
	//
	//Ключи = "Имя,Заголовок,Тип,Родитель,Прототип";
	//СвойстваГруппы = Новый Структура(Ключи);
	//ЗаполнитьЗначенияСвойств(СвойстваГруппы, НоваяСтрока);
	//
	//МенеджерПроекта.ДобавитьГруппу(СвойстваГруппы);
	//
	//Элементы.ФормыИЭлементыУправления.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	//
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКнопку(Команда)
	НоваяСтрока = ФормыИЭлементыУправления.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ИндексКартинки = 4;
	
	НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Кнопка");
	НоваяСтрока.Имя = НовоеИмя;
	НоваяСтрока.Заголовок = НовоеИмя;
	
	НоваяСтрока.Тип = МенеджерПроекта.Типы().КнопкаФормы;
	НоваяСтрока.Вид = МенеджерПроекта.Виды().ОбычнаяКнопка;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТаблицу(Команда)
	НоваяСтрока = ФормыИЭлементыУправления.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ИндексКартинки = 7;
	
	НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Таблица");
	НоваяСтрока.Имя = НовоеИмя;
	НоваяСтрока.Заголовок = НовоеИмя;
	
	НоваяСтрока.Тип = МенеджерПроекта.Типы().ТаблицаФормы;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//
	//ТекущиеДанные = Элементы.СвойстваФормИЭлементовУправления.ТекущиеДанные;
	//ДанныеВыбора = ТекущиеДанные.ДанныеВыбора;
	//
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтраницы(Команда)
	НоваяСтрока = ФормыИЭлементыУправления.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ИндексКартинки = 19;
	
	НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Страницы");
	НоваяСтрока.Имя = НовоеИмя;
	НоваяСтрока.Заголовок = НовоеИмя;
	
	НоваяСтрока.Тип = МенеджерПроекта.Типы().ГруппаФормы;
	НоваяСтрока.Вид = МенеджерПроекта.Виды().Страницы;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтраницу(Команда)
	НоваяСтрока = ФормыИЭлементыУправления.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ИндексКартинки = 18;
	
	НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Страница");
	НоваяСтрока.Имя = НовоеИмя;
	НоваяСтрока.Заголовок = НовоеИмя;
	
	НоваяСтрока.Тип = МенеджерПроекта.Типы().ГруппаФормы;
	НоваяСтрока.Вид = МенеджерПроекта.Виды().Страница;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКартинку(Команда)
	НоваяСтрока = ФормыИЭлементыУправления.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ИндексКартинки = 13;
	
	НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Картинка");
	НоваяСтрока.Имя = НовоеИмя;
	НоваяСтрока.Заголовок = НовоеИмя;
	
	НоваяСтрока.Тип = МенеджерПроекта.Типы().ДекорацияФормы;
	НоваяСтрока.Вид = МенеджерПроекта.Виды().Картинка;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНадпись(Команда)
	НоваяСтрока = ФормыИЭлементыУправления.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ИндексКартинки = 5;
	
	НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Надпись");
	НоваяСтрока.Имя = НовоеИмя;
	НоваяСтрока.Заголовок = НовоеИмя;
	
	НоваяСтрока.Тип = МенеджерПроекта.Типы().ДекорацияФормы;
	НоваяСтрока.Вид = МенеджерПроекта.Виды().Надпись;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФлажок(Команда)
	НоваяСтрока = ФормыИЭлементыУправления.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ИндексКартинки = 20;
	
	НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Флажок");
	НоваяСтрока.Имя = НовоеИмя;
	НоваяСтрока.Заголовок = НовоеИмя;
	
	НоваяСтрока.Тип = МенеджерПроекта.Типы().ПолеФормы;
	НоваяСтрока.Вид = МенеджерПроекта.Виды().ПолеФлажка;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПереключатель(Команда)
	НоваяСтрока = ФормыИЭлементыУправления.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ИндексКартинки = 15;
	
	НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Переключатель");
	НоваяСтрока.Имя = НовоеИмя;
	НоваяСтрока.Заголовок = НовоеИмя;
	
	НоваяСтрока.Тип = МенеджерПроекта.Типы().ПолеФормы;
	НоваяСтрока.Вид = МенеджерПроекта.Виды().ПолеПереключателя;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДерево(Команда)
	НоваяСтрока = ФормыИЭлементыУправления.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ИндексКартинки = 8;
	
	НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Дерево");
	НоваяСтрока.Имя = НовоеИмя;
	НоваяСтрока.Заголовок = НовоеИмя;
	
	НоваяСтрока.Тип = МенеджерПроекта.Типы().ТаблицаФормы;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИндикатор(Команда)
	НоваяСтрока = ФормыИЭлементыУправления.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ИндексКартинки = 11;
	
	НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Индикатор");
	НоваяСтрока.Имя = НовоеИмя;
	НоваяСтрока.Заголовок = НовоеИмя;
	
	НоваяСтрока.Тип = МенеджерПроекта.Типы().ПолеФормы;
	НоваяСтрока.Вид = МенеджерПроекта.Виды().ПолеИндикатора;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПолосуРегулирования(Команда)
	НоваяСтрока = ФормыИЭлементыУправления.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ИндексКартинки = 17;
	
	НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("ПолосаРегулирования");
	НоваяСтрока.Имя = НовоеИмя;
	НоваяСтрока.Заголовок = НовоеИмя;
	
	НоваяСтрока.Тип = МенеджерПроекта.Типы().ПолеФормы;
	НоваяСтрока.Вид = МенеджерПроекта.Виды().ПолеПолосыРегулирования;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКалендарь(Команда)
	НоваяСтрока = ФормыИЭлементыУправления.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ИндексКартинки = 12;
	
	НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Календарь");
	НоваяСтрока.Имя = НовоеИмя;
	НоваяСтрока.Заголовок = НовоеИмя;
	
	НоваяСтрока.Тип = МенеджерПроекта.Типы().ПолеФормы;
	НоваяСтрока.Вид = МенеджерПроекта.Виды().ПолеКалендаря;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьГиперссылку(Команда)
	//Если ЭтоКоманднаяПанель Тогда
	//	
	//ИНаче
	//	
	//	КонецЕсли;
	
	НоваяСтрока = ФормыИЭлементыУправления.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ИндексКартинки = 21;
	
	НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Гиперссылка");
	НоваяСтрока.Имя = НовоеИмя;
	НоваяСтрока.Заголовок = НовоеИмя;
	
	НоваяСтрока.Тип = МенеджерПроекта.Типы().КнопкаФормы;
	НоваяСтрока.Вид = МенеджерПроекта.Виды().Гиперссылка;
	
КонецПроцедуры

&НаКлиенте
Функция ДобавитьСтрокуВставкой(ТекущиеДанные) 
	Результат = Неопределено;
	
	СтрокиУровня = ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы();
	Для Каждого Строка Из СтрокиУровня Цикл
		Если Строка.Имя = ТекущиеДанные.Имя Тогда
			ИндексВставки = СтрокиУровня.Индекс(Строка) + 1;
			
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Результат = СтрокиУровня.Вставить(ИндексВставки);
	
	Возврат Результат;
КонецФункции


&НаКлиенте
Процедура ДобавитьЭлементУправления(Тип, Вид)
	ТекущиеДанные = Элементы.ФормыИЭлементыУправления.ТекущиеДанные;
	Если Ложь
		Или ТекущиеДанные.Тип = МенеджерПроекта.Типы().ФормаКлиентскогоПриложения
		Или ТекущиеДанные.Тип = МенеджерПроекта.Типы().ГруппаФормы
		Или ТекущиеДанные.Тип = МенеджерПроекта.Типы().ТаблицаФормы
		Тогда
		
		НоваяСтрока = ТекущиеДанные.ПолучитьЭлементы().Добавить();
		Родитель = ТекущиеДанные;
		
	Иначе
		НоваяСтрока = ДобавитьСтрокуВставкой(ТекущиеДанные);
		Родитель = ТекущиеДанные.ПолучитьРодителя();

	КонецЕсли;
	
	НоваяСтрока.Тип = Тип;
	НоваяСтрока.Вид = Вид;
	
	Если Родитель.Тип <> МенеджерПроекта.Типы().ФормаКлиентскогоПриложения Тогда
		НоваяСтрока.Родитель = Родитель.Имя;
		
	КонецЕсли;
	
	НоваяСтрока.Прототип = ПолучитьИмяПрототипаРекурсивно(Родитель);
	
	Если Тип = МенеджерПроекта.Типы().ГруппаФормы Тогда
		Если Вид = МенеджерПроекта.Виды().ОбычнаяГруппа Тогда
			НоваяСтрока.ИндексКартинки = 2;
			
			НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Группа");
			НоваяСтрока.Имя = НовоеИмя;
			НоваяСтрока.Заголовок = НовоеИмя;
			
			Ключи = "Имя,Заголовок,Тип,Родитель,Прототип";
			Связать = Ложь;
			Перемещение = Ложь;
			
		КонецЕсли;
	ИначеЕсли Тип = МенеджерПроекта.Типы().ПолеФормы Тогда
		Если Вид = МенеджерПроекта.Виды().ПолеВвода Тогда
			НоваяСтрока.ИндексКартинки = 3;
			
			НовоеИмя = МенеджерПроекта.ПолучитьНовоеИмя("Поле");
			НоваяСтрока.Имя = НовоеИмя;
			НоваяСтрока.ПутьКДанным = НовоеИмя;
			НоваяСтрока.Заголовок = НовоеИмя;
			НоваяСтрока.Путь = "";
			
			Ключи = "Имя,ПутьКДанным,Заголовок,Тип,ТипЗначения,Родитель,Вид,Путь,Прототип";
			Связать = Истина;
			Перемещение = Ложь;
			
		КонецЕсли;
	КонецЕсли;

	СвойстваЭлементаУправления = Новый Структура(Ключи);
	ЗаполнитьЗначенияСвойств(СвойстваЭлементаУправления, НоваяСтрока);
	
	МенеджерПроекта.ДобавитьЭлементУправления(СвойстваЭлементаУправления, Связать, Перемещение);
	
	Элементы.ФормыИЭлементыУправления.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьПодсказокКоманд(Команда)
	ОпределитьВидимостьПодсказокКоманд();
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьВидимостьПодсказокКоманд(ЭтоИзменение = Истина) 
	Если ЭтоИзменение Тогда
		ПоказыватьПодсказкиКоманд = Не ПоказыватьПодсказкиКоманд;
		
	КонецЕсли;
	
	Если ПоказыватьПодсказкиКоманд Тогда
		ВариантОтображенияПодсказки = ОтображениеПодсказки.ОтображатьСправа;
		
	Иначе
		ВариантОтображенияПодсказки = ОтображениеПодсказки.Нет;
		
	КонецЕсли;

	Страницы = Элементы.ГруппаКоманды.ПодчиненныеЭлементы;
	Для Каждого Страница Из Страницы Цикл
		ЭлементыСтраницы = Страница.ПодчиненныеЭлементы;
		Для Каждого ЭлементСтраницы Из ЭлементыСтраницы Цикл
			Если Истина
				И ТипЗнч(ЭлементСтраницы) = Тип("КнопкаФормы")
				И ЭлементСтраницы.ИмяКоманды <> "ВидимостьПодсказокКоманд"
				Тогда
				
				ЭлементСтраницы.ОтображениеПодсказки = ВариантОтображенияПодсказки;

			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СвойстваФормИЭлементовУправленияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элементы.СвойстваФормИЭлементовУправления.ТекущиеДанные;
	Если Элемент.ТекущийЭлемент.Имя = "Свойство" Тогда
		Возврат;
	КонецЕсли;

	Если ТекущиеДанные.ДанныеВыбора.Количество() Тогда
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("СвойстваФормИЭлементовУправленияПриАктивизацииЯчейкиЗавершение", ЭтотОбъект);
		ПоказатьВыборИзСписка(ОписаниеОповещения, ТекущиеДанные.ДанныеВыбора, Элементы.СвойстваФормИЭлементовУправления.ТекущийЭлемент);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СвойстваФормИЭлементовУправленияПриАктивизацииЯчейкиЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	ТекущиеДанные = Элементы.СвойстваФормИЭлементовУправления.ТекущиеДанные;
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ТекущиеДанные.Значение = ВыбранныйЭлемент.Значение;
		
		ЗначениеПриИзменении(Неопределено);
		
	КонецЕсли;
	
	Элементы.СвойстваФормИЭлементовУправления.ЗакончитьРедактированиеСтроки(Ложь);
	
КонецПроцедуры

