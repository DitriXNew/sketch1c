
&НаКлиенте
Перем Проект;

&НаКЛиенте
Перем Типы;

&НаКЛиенте
Перем ТипыЗначения;

&НаКЛиенте
Перем Виды;

&НаКЛиенте
Перем СвойстваФормИЭлементов;


#Область Хлам

&НаКЛиенте
Перем Имена;

&НаКлиенте
Перем ВспомогательныеПараметры;

&НаКлиенте
Перем Прототипы;

#КонецОбласти


&НаКлиенте
Функция ПолучитьВспомогательныеПараметры() 
	Результат = Новый Структура;
	
	//Результат.Вставить("Типы", Новый Структура);
	//Результат.Типы.Вставить("Форма", "Форма");
	//Результат.Типы.Вставить("Группа", "Группа");
	//Результат.Типы.Вставить("Поле", "Поле");
	//Результат.Типы.Вставить("Таблица", "Таблица");
	
	Результат.Вставить("ГруппировкаПодчиненныхЭлементовФормы", Новый Структура);
	Результат.ГруппировкаПодчиненныхЭлементовФормы.Вставить("Вертикальная", "Вертикальная");
	Результат.ГруппировкаПодчиненныхЭлементовФормы.Вставить("ГоризонтальнаяВсегда", "ГоризонтальнаяВсегда");
	Результат.ГруппировкаПодчиненныхЭлементовФормы.Вставить("ГоризонтальнаяЕслиВозможно", "ГоризонтальнаяЕслиВозможно");
	
	Результат.Вставить("ВертикальноеПоложениеВГруппе", Новый Структура);
	Результат.ВертикальноеПоложениеВГруппе.Вставить("Авто", "Авто");
	Результат.ВертикальноеПоложениеВГруппе.Вставить("Верх", "Верх");
	Результат.ВертикальноеПоложениеВГруппе.Вставить("Низ", "Низ");
	Результат.ВертикальноеПоложениеВГруппе.Вставить("Центр", "Центр");
	
	Результат.Вставить("ОтображениеКнопки", Новый Структура);
	Результат.ОтображениеКнопки.Вставить("Авто", "Авто");
	Результат.ОтображениеКнопки.Вставить("Картинка", "Картинка");
	Результат.ОтображениеКнопки.Вставить("КартинкаИТекст", "КартинкаИТекст");
	Результат.ОтображениеКнопки.Вставить("Текст", "Текст");
	
	Результат.Вставить("ПоложениеЗаголовкаЭлементаФормы", Новый Структура);
	Результат.ПоложениеЗаголовкаЭлементаФормы.Вставить("Авто", "Авто");
	Результат.ПоложениеЗаголовкаЭлементаФормы.Вставить("Верх", "Верх");
	Результат.ПоложениеЗаголовкаЭлементаФормы.Вставить("Низ", "Низ");
	Результат.ПоложениеЗаголовкаЭлементаФормы.Вставить("Лево", "Лево");
	Результат.ПоложениеЗаголовкаЭлементаФормы.Вставить("Право", "Право");
	Результат.ПоложениеЗаголовкаЭлементаФормы.Вставить("Нет", "Нет");
	
	Возврат Результат;
КонецФункции

//---

&НаКлиенте
Функция ПолучитьНовоеИмя(ОбъектФормы) Экспорт
	Если Не Проект.Счетчики.Свойство(ОбъектФормы) Тогда
		Проект.Счетчики.Вставить(ОбъектФормы, 1);

	КонецЕсли;

	Результат = ОбъектФормы + Проект.Счетчики[ОбъектФормы];
	Проект.Счетчики[ОбъектФормы] = Проект.Счетчики[ОбъектФормы] + 1;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция Создать() Экспорт
	Проект = Новый Структура;
	Проект.Вставить("Прототипы", Неопределено);
	Проект.Вставить("Счетчики", Новый Структура);
	
	ЗаполнитьТипы();
	ЗаполнитьТипыЗначения();
	ЗаполнитьВиды();
	ЗаполнитьСвойстваФормИЭлементов();
	
	Прототипы = Новый Структура;

КонецФункции


&НаКлиенте
Процедура ЗаполнитьТипы() 
	ИсходнаяСтруктура = Новый Структура;
	ИсходнаяСтруктура.Вставить("ФормаКлиентскогоПриложения", "ФормаКлиентскогоПриложения");
	ИсходнаяСтруктура.Вставить("ГруппаФормы", "ГруппаФормы");
	ИсходнаяСтруктура.Вставить("ПолеФормы", "ПолеФормы");
	ИсходнаяСтруктура.Вставить("КнопкаФормы", "КнопкаФормы");
	ИсходнаяСтруктура.Вставить("ТаблицаФормы", "ТаблицаФормы");
	ИсходнаяСтруктура.Вставить("ДекорацияФормы", "ДекорацияФормы");
	ИсходнаяСтруктура.Вставить("ДополнениеЭлементаФормы", "ДополнениеЭлементаФормы");
	
	Типы = Новый ФиксированнаяСтруктура(ИсходнаяСтруктура);
	
КонецПроцедуры

&НаКлиенте
Функция Типы() Экспорт
	Возврат Типы;	
КонецФункции


&НаКлиенте
Процедура ЗаполнитьВиды() 
	ИсходнаяСтруктура = Новый Структура;
	
	#Область ВидКнопкиФормы
	ИсходнаяСтруктура.Вставить("ОбычнаяКнопка", "ОбычнаяКнопка");
	ИсходнаяСтруктура.Вставить("КнопкаКоманднойПанели", "КнопкаКоманднойПанели");
	ИсходнаяСтруктура.Вставить("Гиперссылка", "Гиперссылка");
	ИсходнаяСтруктура.Вставить("ГиперссылкаКоманднойПанели", "ГиперссылкаКоманднойПанели");
	#КонецОбласти
	
	#Область ВидПоляФормы
	ИсходнаяСтруктура.Вставить("ПолеHTMLДокумента", "ПолеHTMLДокумента");
	ИсходнаяСтруктура.Вставить("ПолеВвода", "ПолеВвода");
	ИсходнаяСтруктура.Вставить("ПолеГеографическойСхемы", "ПолеГеографическойСхемы");
	ИсходнаяСтруктура.Вставить("ПолеГрафическойСхемы", "ПолеГрафическойСхемы");
	ИсходнаяСтруктура.Вставить("ПолеДендрограммы", "ПолеДендрограммы");
	ИсходнаяСтруктура.Вставить("ПолеДиаграммы", "ПолеДиаграммы");
	ИсходнаяСтруктура.Вставить("ПолеДиаграммыГанта", "ПолеДиаграммыГанта");
	ИсходнаяСтруктура.Вставить("ПолеИндикатора", "ПолеИндикатора");
	ИсходнаяСтруктура.Вставить("ПолеКалендаря", "ПолеКалендаря");
	ИсходнаяСтруктура.Вставить("ПолеКартинки", "ПолеКартинки");
	ИсходнаяСтруктура.Вставить("ПолеНадписи", "ПолеНадписи");
	ИсходнаяСтруктура.Вставить("ПолеПереключателя", "ПолеПереключателя");
	ИсходнаяСтруктура.Вставить("ПолеПериода", "ПолеПериода");
	ИсходнаяСтруктура.Вставить("ПолеПланировщика", "ПолеПланировщика");
	ИсходнаяСтруктура.Вставить("ПолеПолосыРегулирования", "ПолеПолосыРегулирования");
	ИсходнаяСтруктура.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокумента");
	ИсходнаяСтруктура.Вставить("ПолеТекстовогоДокумента", "ПолеТекстовогоДокумента");
	ИсходнаяСтруктура.Вставить("ПолеФлажка", "ПолеФлажка");
	ИсходнаяСтруктура.Вставить("ПолеФорматированногоДокумента", "ПолеФорматированногоДокумента");
	#КонецОбласти
	
	#Область ВидГруппыФормы
	ИсходнаяСтруктура.Вставить("АвтоматическаяКоманднаяПанель", "АвтоматическаяКоманднаяПанель");
	ИсходнаяСтруктура.Вставить("ГруппаКнопок", "ГруппаКнопок");
	ИсходнаяСтруктура.Вставить("ГруппаКолонок", "ГруппаКолонок");
	ИсходнаяСтруктура.Вставить("КоманднаяПанель", "КоманднаяПанель");
	ИсходнаяСтруктура.Вставить("КонтекстноеМеню", "КонтекстноеМеню");
	ИсходнаяСтруктура.Вставить("ОбычнаяГруппа", "ОбычнаяГруппа");
	ИсходнаяСтруктура.Вставить("Подменю", "Подменю");
	ИсходнаяСтруктура.Вставить("Страницы", "Страницы");
	ИсходнаяСтруктура.Вставить("Страница", "Страница");
	#КонецОбласти
	
	#Область ВидДекорацииФормы
	ИсходнаяСтруктура.Вставить("Картинка", "Картинка");
	ИсходнаяСтруктура.Вставить("Надпись", "Надпись");
	#КонецОбласти
	
	Виды = Новый ФиксированнаяСтруктура(ИсходнаяСтруктура);
	
КонецПроцедуры

&НаКлиенте
Функция Виды() Экспорт
	Возврат Виды;	
КонецФункции


&НаКлиенте
Процедура ЗаполнитьТипыЗначения() 
	ИсходнаяСтруктура = Новый Структура;
	ИсходнаяСтруктура.Вставить("Строка", "Строка");
	ИсходнаяСтруктура.Вставить("Число", "Число");
	ИсходнаяСтруктура.Вставить("Булево", "Булево");
	ИсходнаяСтруктура.Вставить("Дата", "Дата");
	ИсходнаяСтруктура.Вставить("СтандартныйПериод", "СтандартныйПериод");
	ИсходнаяСтруктура.Вставить("ТаблицаЗначений", "ТаблицаЗначений");
	ИсходнаяСтруктура.Вставить("ДеревоЗначений", "ДеревоЗначений");
	
	ТипыЗначения = Новый ФиксированнаяСтруктура(ИсходнаяСтруктура);
	
КонецПроцедуры

&НаКлиенте
Функция ТипыЗначения() Экспорт
	Возврат ТипыЗначения;	
КонецФункции


&НаКлиенте
Процедура ЗаполнитьСвойстваФормИЭлементов() 
	ИсходнаяСтруктура = Новый Структура;
	ИсходнаяСтруктура.Вставить("Заголовок", "Заголовок");
	
	СвойстваФормИЭлементов = Новый ФиксированнаяСтруктура(ИсходнаяСтруктура);
	
КонецПроцедуры

&НаКлиенте
Функция СвойстваФормИЭлементов() Экспорт
	Возврат СвойстваФормИЭлементов;	
КонецФункции


&НаКлиенте
Функция ДобавитьЭлементУправления(СвойстваЭлементаУправления, Связать, Перемещение) Экспорт
	ТекущийПрототип = Неопределено;
	Если Прототипы.Свойство(СвойстваЭлементаУправления.Прототип, ТекущийПрототип) И ТекущийПрототип <> Неопределено Тогда
		ТекущийПрототип.НарисоватьЭлементУправления(Тип(СвойстваЭлементаУправления.Тип), СвойстваЭлементаУправления, Связать, Перемещение);
		
	КонецЕсли;
КонецФункции


&НаКлиенте
Функция ПереместитьЭлементУправления(ДанныеПеремещения) Экспорт
	ТекущийПрототип = Неопределено;
	Если Прототипы.Свойство(ДанныеПеремещения.ИмяПрототипа, ТекущийПрототип) И ТекущийПрототип <> Неопределено Тогда
		ТекущийПрототип.ПереместитьЭлементУправления(ДанныеПеремещения);
		
	КонецЕсли;
КонецФункции


#Область Группа

&НаКлиенте
Функция ДобавитьГруппу(СвойстваГруппы) Экспорт
	ТекущийПрототип = Неопределено;
	Если Прототипы.Свойство(СвойстваГруппы.Прототип, ТекущийПрототип) И ТекущийПрототип <> Неопределено Тогда
		ТекущийПрототип.НарисоватьЭлементУправления(Тип("ГруппаФормы"), СвойстваГруппы);
		
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область Поле

&НаКлиенте
Функция ДобавитьПоле(СвойстваПоля) Экспорт
	ТекущийПрототип = Неопределено;
	Если Прототипы.Свойство(СвойстваПоля.Прототип, ТекущийПрототип) И ТекущийПрототип <> Неопределено Тогда
		ТекущийПрототип.НарисоватьЭлементУправления(Тип("ПолеФормы"), СвойстваПоля, Истина);
		
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция НайтиПрототипПоЗаголовку(ЗаголовокПрототипа) 
	Результат = Неопределено;
	
	Для Каждого Элемент Из Проект.Формы Цикл
		Если Элемент.Свойства.Заголовок = ЗаголовокПрототипа Тогда
			Результат = Элемент.Прототип;

			Прервать;
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;	
КонецФункции

&НаКлиенте
Функция ПолучитьСвойстваПоля(ДанныеПоля)
	Результат = Новый Структура;
	Результат.Вставить("Имя", ДанныеПоля.Имя);
	Результат.Вставить("Вид", "ПолеВвода");
 
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ПолучитьПоле(НавигационныеДанные) 
	//Результат = ПолучитьФорму("ВнешняяОбработка.Эскиз.Форма.Прототип",, РодительскаяФорма, Истина);
	//Результат.Автозаголовок = Ложь;
	//Результат.ЗакрыватьПриЗакрытииВладельца = Истина;
	//Результат.Заголовок = СвойстваФормы.Заголовок;
  //
	//Возврат Результат;
КонецФункции

#КонецОбласти

&НаКлиенте
Функция ДобавитьКнопку() Экспорт
	
КонецФункции

&НаКлиенте
Функция ДобавитьТаблицу() Экспорт
	
КонецФункции

&НаКлиенте
Функция ДобавитьДекорацию() Экспорт
	
КонецФункции

&НаКлиенте
Функция УдалитьФорму() Экспорт
	
КонецФункции

&НаКлиенте
Функция УдалитьЭлементУправления() Экспорт
	
КонецФункции

&НаКлиенте
Функция СделатьТекущим() Экспорт
	
КонецФункции

&НаКлиенте
Функция Загрузить(РасположениеПроекта, ОсновнаяФорма) Экспорт
	Читатель = Новый ТекстовыйДокумент;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОсновнаяФорма", ОсновнаяФорма);
	ДополнительныеПараметры.Вставить("Читатель", Читатель);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	Читатель.НачатьЧтение(ОписаниеОповещения, РасположениеПроекта);
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьЗавершение(ДополнительныеПараметры) Экспорт
	Десериализатор = Новый ЧтениеJSON;
	Десериализатор.УстановитьСтроку(ДополнительныеПараметры.Читатель.ПолучитьТекст());
	
	ИменаСвойствСоЗначениемТипаДата = Новый Массив;
	//ИменаСвойствСоЗначениемТипаДата.Добавить("");
	
	Проект = ПрочитатьJSON(Десериализатор, Ложь, ИменаСвойствСоЗначениемТипаДата, ФорматДатыJSON.ISO);
	
	СоздатьФормы(ДополнительныеПараметры.ОсновнаяФорма);

КонецПроцедуры

&НаКлиенте
Процедура СоздатьФормы(ОсновнаяФорма)
	//Для Каждого Элемент Из Проект Цикл
	//	Элемент.Значение.Удалить("Прототип");
	//	Элемент.Значение.Вставить("Прототип", ПолучитьПрототип(ОсновнаяФорма));
	//	
	//КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция Сохранить(РасположениеПроекта) Экспорт
	Сериализатор = Новый ЗаписьJSON;
	Сериализатор.ПроверятьСтруктуру = Истина;
	
	ПараметрыПисателя = Новый ПараметрыЗаписиJSON(, Символы.Таб,, ЭкранированиеСимволовJSON.СимволыВнеBMP);
	Сериализатор.УстановитьСтроку(ПараметрыПисателя);
	
	НастройкаСериализации = Новый НастройкиСериализацииJSON;
	НастройкаСериализации.ВариантЗаписиДаты = ВариантЗаписиДатыJSON.ЛокальнаяДата;
	НастройкаСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO;
	
	ЗаписатьJSON(Сериализатор, Проект, НастройкаСериализации, "Преобразователь", ЭтотОбъект);
	
	Писатель = Новый ТекстовыйДокумент;
	Писатель.УстановитьТекст(Сериализатор.Закрыть());

	Писатель.НачатьЗапись(Неопределено, РасположениеПроекта);
	
КонецФункции

&НаКлиенте
Функция Преобразователь(Знач Свойство, Значение, ДополнительныеПараметры, Отказ) Экспорт
	Результат = Неопределено;
	
	Если ТипЗнч(Значение) = Тип("УправляемаяФорма") Тогда
		Результат = "";

	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ДобавитьЭлементНаПрототип() Экспорт
	
КонецФункции

&НаКлиенте
Функция ОткрытьПрототип(ТекущиеДанные, РодительскаяФорма, Показать = Истина) Экспорт
	ТекущийПрототип = Неопределено;
	Если Прототипы.Свойство(ТекущиеДанные.Имя, ТекущийПрототип) И ТекущийПрототип <> Неопределено Тогда
		//todo
		
	Иначе
		ТекущийПрототип = ПолучитьФорму("ВнешняяОбработка.Эскиз.Форма.Прототип",, РодительскаяФорма, ТекущиеДанные.Идентификатор);
		ТекущийПрототип.ЗакрыватьПриЗакрытииВладельца = Истина;
		ТекущийПрототип.Автозаголовок = Ложь;
		
		ТекущийПрототип.Заголовок = ТекущиеДанные.Заголовок;
		
		Прототипы.Вставить(ТекущиеДанные.Имя, ТекущийПрототип);

	КонецЕсли;
	
	Если Показать Тогда
		ТекущийПрототип.Открыть();

	КонецЕсли;
КонецФункции

&НаКлиенте
Функция ПолучитьРоль(ТекущаяРоль, ВладелецФормыРолей) Экспорт
	ПараметрыФормыРолей = Новый Структура;
	ПараметрыФормыРолей.Вставить("ТекущаяРоль", ТекущаяРоль);
	
	ОткрытьФорму("ВнешняяОбработка.Эскиз.Форма.Роли", ПараметрыФормыРолей, ВладелецФормыРолей);
	
КонецФункции

&НаКлиенте
Процедура ИзменитьСвойство(Прототип, Свойство, Значение, ЭтоФорма = Истина, Элемент = "") Экспорт
	ТекущийПрототип = Неопределено;
	Если Прототипы.Свойство(Прототип, ТекущийПрототип) И ТекущийПрототип <> Неопределено Тогда
		ТекущийПрототип.ИзменитьСвойство(Свойство, Значение, ЭтоФорма, Элемент);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьТипЗначения(Прототип, Свойство, Значение, ЭтоФорма = Истина, Элемент = "") Экспорт
	ТекущийПрототип = Неопределено;
	Если Прототипы.Свойство(Прототип, ТекущийПрототип) И ТекущийПрототип <> Неопределено Тогда
		ТекущийПрототип.ИзменитьТипЗначения(Свойство, Значение, ЭтоФорма, Элемент);
		
	КонецЕсли;
КонецПроцедуры






//---

#Область Пример_заполнения_свойст
////---
//СвойстваПоля = Новый Структура;
//СвойстваПоля.Вставить("Имя", "Поле1");
//СвойстваПоля.Вставить("Заголовок", "Поле 1");
//СвойстваПоля.Вставить("Тип", "Число");
//СвойстваПоля.Вставить("Вид", "ПолеВвода");
//СвойстваПоля.Вставить("Путь", "");
//СвойстваПоля.Вставить("Родитель", Неопределено);
//СвойстваПоля.Вставить("ПутьКДанным", "Поле1");
//
//НарисоватьЭлементУправления(Тип("ПолеФормы"), СвойстваПоля, Истина);
//
////---
//СвойстваГруппы = Новый Структура;
//СвойстваГруппы.Вставить("Имя", "Группа1");
//СвойстваГруппы.Вставить("Родитель", Неопределено);
//СвойстваГруппы.Вставить("Заголовок", "Группа 1");
//
//НарисоватьЭлементУправления(Тип("ГруппаФормы"), СвойстваГруппы);
//
////---
//СвойстваКнопки = Новый Структура;
//СвойстваКнопки.Вставить("Имя", "Кнопка1");
//СвойстваКнопки.Вставить("Заголовок", "Кнопка 1");
//СвойстваКнопки.Вставить("Действие", "ОбработатьКоманду");
//СвойстваКнопки.Вставить("Родитель", Неопределено);
//
//НарисоватьЭлементУправления(Тип("КнопкаФормы"), СвойстваКнопки, Истина);
//
////---
//СвойстваТаблицы = Новый Структура;
//СвойстваТаблицы.Вставить("Имя", "РеквизитТаблицаЗначений");
//СвойстваТаблицы.Вставить("Тип", "ДеревоЗначений");
//СвойстваТаблицы.Вставить("Родитель", Неопределено);
//СвойстваТаблицы.Вставить("АвтоВводНовойСтроки", Ложь);
//СвойстваТаблицы.Вставить("ПоложениеЗаголовкаЭлементаФормы", "Авто");
//
//НарисоватьЭлементУправления(Тип("ТаблицаФормы"), СвойстваТаблицы, Истина);
//
////---
//СвойстваКолонки = Новый Структура;
//СвойстваКолонки.Вставить("Имя", "РеквизитСтрока");
//СвойстваКолонки.Вставить("Тип", "Строка");
//СвойстваКолонки.Вставить("Вид", "ПолеВвода");
//СвойстваКолонки.Вставить("Заголовок", "Реквизит строка");
//СвойстваКолонки.Вставить("Родитель", "РеквизитТаблицаЗначений");
//СвойстваКолонки.Вставить("Путь", "РеквизитТаблицаЗначений");
//СвойстваКолонки.Вставить("ПутьКДанным", "РеквизитТаблицаЗначений.РеквизитСтрока");
//
//НарисоватьЭлементУправления(Тип("ПолеФормы"), СвойстваКолонки, Истина);
//
#КонецОбласти




















