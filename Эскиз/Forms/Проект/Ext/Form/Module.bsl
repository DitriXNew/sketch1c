
&НаКлиенте
Перем Проект;

&НаКЛиенте
Перем Типы;

&НаКЛиенте
Перем Виды;

&НаКЛиенте
Перем ТипыЗначения;

&НаКлиенте
Перем Прототипы;

//---

&НаКлиенте
Функция ПолучитьДанныеПроекта() Экспорт
	Возврат Проект;
КонецФункции

&НаКлиенте
Функция ЗагрузитьДанныеПроекта(ДанныеПроекта) Экспорт

КонецФункции

//---

&НаКлиенте
Функция Создать() Экспорт
	Проект = Новый Структура;
	Проект.Вставить("Прототипы", Неопределено);
	Проект.Вставить("Счетчики", Новый Структура);
	
	ЗаполнитьТипы();
	ЗаполнитьТипыЗначения();
	ЗаполнитьВиды();
	
	Прототипы = Новый Структура;

КонецФункции

//---

&НаКлиенте
Процедура ЗаполнитьТипы() 
	ИсходнаяСтруктура = Новый Структура;
	ИсходнаяСтруктура.Вставить("ФормаКлиентскогоПриложения", "ФормаКлиентскогоПриложения");
	ИсходнаяСтруктура.Вставить("ГруппаФормы", "ГруппаФормы");
	ИсходнаяСтруктура.Вставить("ПолеФормы", "ПолеФормы");
	ИсходнаяСтруктура.Вставить("КнопкаФормы", "КнопкаФормы");
	ИсходнаяСтруктура.Вставить("ТаблицаФормы", "ТаблицаФормы");
	ИсходнаяСтруктура.Вставить("ДекорацияФормы", "ДекорацияФормы");
	ИсходнаяСтруктура.Вставить("ДополнениеЭлементаФормы", "ДополнениеЭлементаФормы");
	
	Типы = Новый ФиксированнаяСтруктура(ИсходнаяСтруктура);
	
КонецПроцедуры

&НаКлиенте
Функция Типы() Экспорт
	Возврат Типы;	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьВиды() 
	ИсходнаяСтруктура = Новый Структура;
	
	#Область ВидКнопкиФормы
	ИсходнаяСтруктура.Вставить("ОбычнаяКнопка", "ОбычнаяКнопка");
	ИсходнаяСтруктура.Вставить("КнопкаКоманднойПанели", "КнопкаКоманднойПанели");
	ИсходнаяСтруктура.Вставить("Гиперссылка", "Гиперссылка");
	ИсходнаяСтруктура.Вставить("ГиперссылкаКоманднойПанели", "ГиперссылкаКоманднойПанели");
	#КонецОбласти
	
	#Область ВидПоляФормы
	ИсходнаяСтруктура.Вставить("ПолеHTMLДокумента", "ПолеHTMLДокумента");
	ИсходнаяСтруктура.Вставить("ПолеВвода", "ПолеВвода");
	ИсходнаяСтруктура.Вставить("ПолеГеографическойСхемы", "ПолеГеографическойСхемы");
	ИсходнаяСтруктура.Вставить("ПолеГрафическойСхемы", "ПолеГрафическойСхемы");
	ИсходнаяСтруктура.Вставить("ПолеДендрограммы", "ПолеДендрограммы");
	ИсходнаяСтруктура.Вставить("ПолеДиаграммы", "ПолеДиаграммы");
	ИсходнаяСтруктура.Вставить("ПолеДиаграммыГанта", "ПолеДиаграммыГанта");
	ИсходнаяСтруктура.Вставить("ПолеИндикатора", "ПолеИндикатора");
	ИсходнаяСтруктура.Вставить("ПолеКалендаря", "ПолеКалендаря");
	ИсходнаяСтруктура.Вставить("ПолеКартинки", "ПолеКартинки");
	ИсходнаяСтруктура.Вставить("ПолеНадписи", "ПолеНадписи");
	ИсходнаяСтруктура.Вставить("ПолеПереключателя", "ПолеПереключателя");
	ИсходнаяСтруктура.Вставить("ПолеПериода", "ПолеПериода");
	ИсходнаяСтруктура.Вставить("ПолеПланировщика", "ПолеПланировщика");
	ИсходнаяСтруктура.Вставить("ПолеПолосыРегулирования", "ПолеПолосыРегулирования");
	ИсходнаяСтруктура.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокумента");
	ИсходнаяСтруктура.Вставить("ПолеТекстовогоДокумента", "ПолеТекстовогоДокумента");
	ИсходнаяСтруктура.Вставить("ПолеФлажка", "ПолеФлажка");
	ИсходнаяСтруктура.Вставить("ПолеФорматированногоДокумента", "ПолеФорматированногоДокумента");
	#КонецОбласти
	
	#Область ВидГруппыФормы
	ИсходнаяСтруктура.Вставить("АвтоматическаяКоманднаяПанель", "АвтоматическаяКоманднаяПанель");
	ИсходнаяСтруктура.Вставить("ГруппаКнопок", "ГруппаКнопок");
	ИсходнаяСтруктура.Вставить("ГруппаКолонок", "ГруппаКолонок");
	ИсходнаяСтруктура.Вставить("КоманднаяПанель", "КоманднаяПанель");
	ИсходнаяСтруктура.Вставить("КонтекстноеМеню", "КонтекстноеМеню");
	ИсходнаяСтруктура.Вставить("ОбычнаяГруппа", "ОбычнаяГруппа");
	ИсходнаяСтруктура.Вставить("Подменю", "Подменю");
	ИсходнаяСтруктура.Вставить("Страницы", "Страницы");
	ИсходнаяСтруктура.Вставить("Страница", "Страница");
	#КонецОбласти
	
	#Область ВидДекорацииФормы
	ИсходнаяСтруктура.Вставить("Картинка", "Картинка");
	ИсходнаяСтруктура.Вставить("Надпись", "Надпись");
	#КонецОбласти
	
	Виды = Новый ФиксированнаяСтруктура(ИсходнаяСтруктура);
	
КонецПроцедуры

&НаКлиенте
Функция Виды() Экспорт
	Возврат Виды;	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьТипыЗначения() 
	ИсходнаяСтруктура = Новый Структура;
	ИсходнаяСтруктура.Вставить("Строка", "Строка");
	ИсходнаяСтруктура.Вставить("Число", "Число");
	ИсходнаяСтруктура.Вставить("Булево", "Булево");
	ИсходнаяСтруктура.Вставить("Дата", "Дата");
	ИсходнаяСтруктура.Вставить("СтандартныйПериод", "СтандартныйПериод");
	ИсходнаяСтруктура.Вставить("ТаблицаЗначений", "ТаблицаЗначений");
	ИсходнаяСтруктура.Вставить("ДеревоЗначений", "ДеревоЗначений");
	
	ТипыЗначения = Новый ФиксированнаяСтруктура(ИсходнаяСтруктура);
	
КонецПроцедуры

&НаКлиенте
Функция ТипыЗначения() Экспорт
	Возврат ТипыЗначения;	
КонецФункции

//---

&НаКлиенте
Функция ОткрытьПрототип(ТекущиеДанные, РодительскаяФорма, Показать = Истина) Экспорт
	ТекущийПрототип = Неопределено;
	Если Прототипы.Свойство(ТекущиеДанные.Имя, ТекущийПрототип) И ТекущийПрототип <> Неопределено Тогда
		//todo
		
	Иначе
		ТекущийПрототип = ПолучитьФорму("ВнешняяОбработка.Эскиз.Форма.Прототип",, РодительскаяФорма, ТекущиеДанные.Идентификатор);
		ТекущийПрототип.ЗакрыватьПриЗакрытииВладельца = Истина;
		ТекущийПрототип.Автозаголовок = Ложь;
		
		ТекущийПрототип.Заголовок = ТекущиеДанные.Заголовок;
		
		Прототипы.Вставить(ТекущиеДанные.Имя, ТекущийПрототип);

	КонецЕсли;
	
	Если Показать Тогда
		ТекущийПрототип.Открыть();

	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура АктивизироватьТекущийЭлемент(Прототип, ИмяЭлемента) Экспорт
	ТекущийПрототип = Неопределено;
	Если Прототипы.Свойство(Прототип, ТекущийПрототип) И ТекущийПрототип <> Неопределено Тогда
		Если ТекущийПрототип.Открыта() Тогда
			ТекущийПрототип.Открыть();
			ТекущийПрототип.АктивизироватьТекущийЭлементУправления(ИмяЭлемента);
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьНовоеИмя(ОбъектФормы) Экспорт
	Если Не Проект.Прототипы.Счетчики.Свойство(ОбъектФормы) Тогда
		Проект.Счетчики.Вставить(ОбъектФормы, 1);

	КонецЕсли;

	Результат = ОбъектФормы + Проект.Счетчики[ОбъектФормы];
	Проект.Счетчики[ОбъектФормы] = Проект.Счетчики[ОбъектФормы] + 1;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ДобавитьЭлементУправления(СвойстваЭлементаУправления, Связать, Перемещение) Экспорт
	ТекущийПрототип = Неопределено;
	Если Прототипы.Свойство(СвойстваЭлементаУправления.Прототип, ТекущийПрототип) И ТекущийПрототип <> Неопределено Тогда
		ТекущийПрототип.НарисоватьЭлементУправления(Тип(СвойстваЭлементаУправления.Тип), СвойстваЭлементаУправления, Связать, Перемещение);
		
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция ПереместитьЭлементУправления(ДанныеПеремещения) Экспорт
	ТекущийПрототип = Неопределено;
	Если Прототипы.Свойство(ДанныеПеремещения.ИмяПрототипа, ТекущийПрототип) И ТекущийПрототип <> Неопределено Тогда
		ТекущийПрототип.ПереместитьЭлементУправления(ДанныеПеремещения);
		
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция УдалитьФорму() Экспорт
	
КонецФункции

&НаКлиенте
Функция УдалитьЭлементУправления() Экспорт
	
КонецФункции

&НаКлиенте
Процедура ИзменитьСвойство(Прототип, Свойство, Значение, ЭтоФорма = Истина, Элемент = "") Экспорт
	ТекущийПрототип = Неопределено;
	Если Прототипы.Свойство(Прототип, ТекущийПрототип) И ТекущийПрототип <> Неопределено Тогда
		ТекущийПрототип.ИзменитьСвойствоЭлементаУправленияНаСервере(Свойство, Значение, ЭтоФорма, Элемент);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьТипЗначения(Прототип, Свойство, Значение, ЭтоФорма = Истина, Элемент = "") Экспорт
	ТекущийПрототип = Неопределено;
	Если Прототипы.Свойство(Прототип, ТекущийПрототип) И ТекущийПрототип <> Неопределено Тогда
		ТекущийПрототип.ИзменитьТипЗначения(Свойство, Значение, ЭтоФорма, Элемент);
		
	КонецЕсли;
КонецПроцедуры
