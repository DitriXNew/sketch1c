
&НаКлиенте
Перем Проект;

&НаКлиенте
Функция Создать() Экспорт
	Проект = Новый Массив;

КонецФункции

&НаКлиенте
Функция ДобавитьФорму(РодительскаяФорма) Экспорт
	Результат = Новый Структура;

	Результат.Вставить("Тип", "Форма");
	Результат.Вставить("Свойства", ПолучитьСвойстваПрототипа());
	Результат.Вставить("Прототип", ПолучитьПрототип(РодительскаяФорма, Результат.Свойства));
	Результат.Вставить("Дочерние", Новый Соответствие);

	Проект.Добавить(Результат);
	
	Возврат Результат;	
КонецФункции

&НаКлиенте
Функция ПолучитьСвойстваПрототипа()
	Результат = Новый Структура;
	Результат.Вставить("Заголовок", "Новая форма");

	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ПолучитьПрототип(РодительскаяФорма, СвойстваФормы) 
	Результат = ПолучитьФорму("ВнешняяОбработка.Эскиз.Форма.Прототип",, РодительскаяФорма, Истина);
	Результат.Автозаголовок = Ложь;
	Результат.ЗакрыватьПриЗакрытииВладельца = Истина;
	Результат.Заголовок = СвойстваФормы.Заголовок;

	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ДобавитьГруппу() Экспорт
	
КонецФункции

&НаКлиенте
Функция ДобавитьПоле() Экспорт
	
КонецФункции

&НаКлиенте
Функция ДобавитьКнопку() Экспорт
	
КонецФункции

&НаКлиенте
Функция ДобавитьТаблицу() Экспорт
	
КонецФункции

&НаКлиенте
Функция ДобавитьДекорацию() Экспорт
	
КонецФункции

&НаКлиенте
Функция УдалитьФорму() Экспорт
	
КонецФункции

&НаКлиенте
Функция УдалитьЭлементУправления() Экспорт
	
КонецФункции

&НаКлиенте
Функция СделатьТекущим() Экспорт
	
КонецФункции

&НаКлиенте
Функция Загрузить(РасположениеПроекта, ОсновнаяФорма) Экспорт
	Читатель = Новый ТекстовыйДокумент;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОсновнаяФорма", ОсновнаяФорма);
	ДополнительныеПараметры.Вставить("Читатель", Читатель);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	Читатель.НачатьЧтение(ОписаниеОповещения, РасположениеПроекта);
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьЗавершение(ДополнительныеПараметры) Экспорт
	Десериализатор = Новый ЧтениеJSON;
	Десериализатор.УстановитьСтроку(ДополнительныеПараметры.Читатель.ПолучитьТекст());
	
	ИменаСвойствСоЗначениемТипаДата = Новый Массив;
	//ИменаСвойствСоЗначениемТипаДата.Добавить("");
	
	Проект = ПрочитатьJSON(Десериализатор, Ложь, ИменаСвойствСоЗначениемТипаДата, ФорматДатыJSON.ISO);
	
	СоздатьФормы(ДополнительныеПараметры.ОсновнаяФорма);

КонецПроцедуры

&НаКлиенте
Процедура СоздатьФормы(ОсновнаяФорма)
	//Для Каждого Элемент Из Проект Цикл
	//	Элемент.Значение.Удалить("Прототип");
	//	Элемент.Значение.Вставить("Прототип", ПолучитьПрототип(ОсновнаяФорма));
	//	
	//КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция Сохранить(РасположениеПроекта) Экспорт
	Сериализатор = Новый ЗаписьJSON;
	Сериализатор.ПроверятьСтруктуру = Истина;
	
	ПараметрыПисателя = Новый ПараметрыЗаписиJSON(, Символы.Таб,, ЭкранированиеСимволовJSON.СимволыВнеBMP);
	Сериализатор.УстановитьСтроку(ПараметрыПисателя);
	
	НастройкаСериализации = Новый НастройкиСериализацииJSON;
	НастройкаСериализации.ВариантЗаписиДаты = ВариантЗаписиДатыJSON.ЛокальнаяДата;
	НастройкаСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO;
	
	ЗаписатьJSON(Сериализатор, Проект, НастройкаСериализации, "Преобразователь", ЭтотОбъект);
	
	Писатель = Новый ТекстовыйДокумент;
	Писатель.УстановитьТекст(Сериализатор.Закрыть());

	Писатель.НачатьЗапись(Неопределено, РасположениеПроекта);
	
КонецФункции

&НаКлиенте
Функция Преобразователь(Знач Свойство, Значение, ДополнительныеПараметры, Отказ) Экспорт
	Результат = Неопределено;
	
	Если ТипЗнч(Значение) = Тип("УправляемаяФорма") Тогда
		Результат = "";

	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ДобавитьЭлементНаПрототип() Экспорт
	
КонецФункции

&НаКлиенте
Функция ОткрытьПрототип(Имя) Экспорт
	Для Каждого Элемент Из Проект Цикл
		Если Элемент.Свойства.Заголовок = Имя Тогда
			Элемент.Прототип.Открыть();
			
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецФункции
