&НаКлиенте
Процедура АктивизироватьТекущийЭлементУправления(ИмяЭлемента) Экспорт
	ИскомыйЭлемент = ЭтаФорма.Элементы.Найти(ИмяЭлемента);
	Если ИскомыйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ЭтотОбъект.ТекущийЭлемент = ИскомыйЭлемент;
	ЭтотОбъект.ОбновитьОтображениеДанных();

КонецПроцедуры

&НаКлиенте
Процедура НарисоватьЭлементУправления(Тип, СвойстваЭлемента, Связать, Перемещение) Экспорт
	НарисоватьЭлементУправленияНаСервере(Тип, СвойстваЭлемента, Связать, Перемещение);
	ЭтаФорма.ОбновитьОтображениеДанных();

КонецПроцедуры

&НаСервере
Процедура НарисоватьЭлементУправленияНаСервере(Тип, СвойстваЭлемента, Связать, Перемещение)
	РодительЭлемента = СвойстваЭлемента.Родитель;
	Если ПустаяСтрока(РодительЭлемента) Тогда
		РодительЭлемента = Неопределено;

	Иначе
		РодительЭлемента = ЭтаФорма.Элементы[РодительЭлемента];

	КонецЕсли;

	Если Перемещение Тогда
		Элемент = СвойстваЭлемента.Элемент;
		Если ЗначениеЗаполнено(Элемент) Тогда
			Элемент =  ЭтаФорма.Элементы[Элемент];

		КонецЕсли;

		НовыйЭлемент = Этаформа.Элементы.Вставить(СвойстваЭлемента.Имя, Тип, РодительЭлемента, Элемент);

	Иначе
		НовыйЭлемент = Этаформа.Элементы.Добавить(СвойстваЭлемента.Имя, Тип, РодительЭлемента);

	КонецЕсли;

	Если Тип = Тип("КнопкаФормы") Тогда
		Если Связать Тогда
			ДобавитьКоманду(СвойстваЭлемента.Имя, "ОбработатьКоманду", СвойстваЭлемента.Заголовок);

		КонецЕсли;

		НовыйЭлемент.ИмяКоманды = СвойстваЭлемента.Имя;
		НовыйЭлемент.Вид = ВидКнопкиФормы[СвойстваЭлемента.Вид];

		УстановитьИзменитьСвойство(НовыйЭлемент, "Заголовок", СвойстваЭлемента.Заголовок);
		УстановитьИзменитьСвойство(НовыйЭлемент, "КнопкаПоУмолчанию", СвойстваЭлемента.КнопкаПоУмолчанию);

	ИначеЕсли Тип = Тип("ПолеФормы") Тогда
		Если Связать Тогда
			ДобавитьРеквизит(СвойстваЭлемента.Имя, СвойстваЭлемента.ТипЗначения, СвойстваЭлемента.Путь);

		КонецЕсли;

		НовыйЭлемент.Вид = ВидПоляФормы[СвойстваЭлемента.Вид];
		НовыйЭлемент.ПутьКДанным = СвойстваЭлемента.ПутьКДанным;

		УстановитьИзменитьСвойство(НовыйЭлемент, "ПоложениеЗаголовка", СвойстваЭлемента.ПоложениеЗаголовка);

		Если НовыйЭлемент.Вид = ВидПоляФормы.ПолеКартинки Тогда
			НовыйЭлемент.УстановитьДействие("Нажатие", "ОбработатьНажатие");
			ДобавитьКоманду(СвойстваЭлемента.Имя, "ОбработатьКоманду", СвойстваЭлемента.Заголовок);

			УстановитьИзменитьСвойство(НовыйЭлемент, "ТекстНевыбраннойКартинки", "Нажмите, чтобы выбрать изображение.");
			УстановитьИзменитьСвойство(НовыйЭлемент, "Гиперссылка", СвойстваЭлемента.Гиперссылка);

		ИначеЕсли НовыйЭлемент.Вид = ВидПоляФормы.ПолеПереключателя Тогда
			УстановитьИзменитьСвойство(НовыйЭлемент, "ВидПереключателя", СвойстваЭлемента.ВидПереключателя);

		КонецЕсли;
	ИначеЕсли Тип = Тип("ГруппаФормы") Тогда
		НовыйЭлемент.Вид = ВидГруппыФормы[СвойстваЭлемента.Вид];
		Если НовыйЭлемент.Вид = ВидГруппыФормы.ОбычнаяГруппа Тогда
			УстановитьИзменитьСвойство(НовыйЭлемент, "ОтображатьЗаголовок", СвойстваЭлемента.ОтображатьЗаголовок);
			УстановитьИзменитьСвойство(НовыйЭлемент, "Группировка", СвойстваЭлемента.Группировка);

		ИначеЕсли НовыйЭлемент.Вид = ВидГруппыФормы.ГруппаКнопок Тогда
			УстановитьИзменитьСвойство(НовыйЭлемент, "Отображение", СвойстваЭлемента.Отображение);

		КонецЕсли;

		УстановитьИзменитьСвойство(НовыйЭлемент, "Заголовок", СвойстваЭлемента.Заголовок);
		УстановитьИзменитьСвойство(НовыйЭлемент, "ВертикальноеПоложениеПодчиненных", СвойстваЭлемента.ВертикальноеПоложениеПодчиненных);
		УстановитьИзменитьСвойство(НовыйЭлемент, "ГоризонтальноеПоложениеПодчиненных", СвойстваЭлемента.ГоризонтальноеПоложениеПодчиненных);
		УстановитьИзменитьСвойство(НовыйЭлемент, "ВертикальноеПоложениеВГруппе", СвойстваЭлемента.ВертикальноеПоложениеВГруппе);
		УстановитьИзменитьСвойство(НовыйЭлемент, "ГоризонтальноеПоложениеВГруппе", СвойстваЭлемента.ГоризонтальноеПоложениеВГруппе);
//		УстановитьИзменитьСвойство(НовыйЭлемент, "Видимость", СвойстваЭлемента.Видимость);
//		УстановитьИзменитьСвойство(НовыйЭлемент, "Доступность", СвойстваЭлемента.Доступность);
//		УстановитьИзменитьСвойство(НовыйЭлемент, "ОтображениеПодсказки", СвойстваЭлемента.ОтображениеПодсказки);
//		УстановитьИзменитьСвойство(НовыйЭлемент, "Подсказка", СвойстваЭлемента.Подсказка);
//		УстановитьИзменитьСвойство(НовыйЭлемент, "РастягиватьПоВертикали", СвойстваЭлемента.РастягиватьПоВертикали);
//		УстановитьИзменитьСвойство(НовыйЭлемент, "РастягиватьПоГоризонтали", СвойстваЭлемента.РастягиватьПоГоризонтали);
//		УстановитьИзменитьСвойство(НовыйЭлемент, "ТолькоПросмотр", СвойстваЭлемента.ТолькоПросмотр);

	ИначеЕсли Тип = Тип("ТаблицаФормы") Тогда
		Если Связать Тогда
			ДобавитьРеквизит(СвойстваЭлемента.Имя, СвойстваЭлемента.ТипЗначения);

		КонецЕсли;

		НовыйЭлемент.ПутьКДанным = СвойстваЭлемента.Имя;

		УстановитьИзменитьСвойство(НовыйЭлемент, "Заголовок", СвойстваЭлемента.Заголовок);
		УстановитьИзменитьСвойство(НовыйЭлемент, "ПоложениеЗаголовка", СвойстваЭлемента.ПоложениеЗаголовка);
		УстановитьИзменитьСвойство(НовыйЭлемент, "АвтоВводНовойСтроки", СвойстваЭлемента.АвтоВводНовойСтроки);

	ИначеЕсли Тип = Тип("ДекорацияФормы") Тогда
		НовыйЭлемент.Вид = ВидДекорацииФормы[СвойстваЭлемента.Вид];

		УстановитьИзменитьСвойство(НовыйЭлемент, "Заголовок", СвойстваЭлемента.Заголовок);

	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Функция СтеретьЭлементУправления(ИмяЭлемента, ИмяРеквизита, ЭтоКоманда, ЭтоКолонка, ИмяТаблицы) Экспорт
	Результат = СтеретьЭлементУправленияНаСервере(ИмяЭлемента, ИмяРеквизита, ЭтоКоманда, ЭтоКолонка, ИмяТаблицы);
	ЭтаФорма.ОбновитьОтображениеДанных();

	Возврат Результат;
КонецФункции

&НаСервере
Функция СтеретьЭлементУправленияНаСервере(ИмяЭлемента, ИмяРеквизита, ЭтоКоманда, ЭтоКолонка, ИмяТаблицы)
	Результат = Ложь;

	ИскомыйЭлемент = ЭтаФорма.Элементы.Найти(ИмяЭлемента);
	Если ИскомыйЭлемент = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;

	ЭтаФорма.Элементы.Удалить(ИскомыйЭлемент);

	Если ПустаяСтрока(ИмяРеквизита) Тогда
		Результат = Истина;

		Возврат Результат;
	КонецЕсли;

	Если ЭтоКоманда Тогда
		ИскомаяКоманда = ЭтаФорма.Команды.Найти(ИмяРеквизита);
		Если ИскомаяКоманда = Неопределено Тогда
			//todo
		Иначе
			ЭтаФорма.Команды.Удалить(ИскомаяКоманда);

			Результат = Истина;

		КонецЕсли;
	ИначеЕсли ЭтоКолонка Тогда
		УдаляемыеРеквизиты = Новый Массив(1);
		УдаляемыеРеквизиты[0] = ИмяТаблицы + "." + ИмяРеквизита;

		ИзменитьРеквизиты( , УдаляемыеРеквизиты);

		Результат = Истина;

	Иначе
		УдаляемыеРеквизиты = Новый Массив(1);
		УдаляемыеРеквизиты[0] = ИмяРеквизита;

		ИзменитьРеквизиты( , УдаляемыеРеквизиты);

		Результат = Истина;

	КонецЕсли;

	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ПереместитьЭлементУправления(ДанныеПеремещения) Экспорт
	ПереместитьЭлементУправленияНаСервере(ДанныеПеремещения);
	ЭтаФорма.ОбновитьОтображениеДанных();

КонецПроцедуры

&НаСервере
Процедура ПереместитьЭлементУправленияНаСервере(ДанныеПеремещения)
	ПеремещаемыйЭлемент = Элементы.Найти(ДанныеПеремещения.ИмяПеремещаемогоЭлемента);

	Если ПустаяСтрока(ДанныеПеремещения.ИмяРодительскогоЭлемента) Тогда
		РодительскийЭлемент = ЭтотОбъект;

	Иначе
		РодительскийЭлемент = Элементы.Найти(ДанныеПеремещения.ИмяРодительскогоЭлемента);

	КонецЕсли;

	ЭлементМестоположения = Элементы.Найти(ДанныеПеремещения.ИмяЭлементаМесторасположения);

	Элементы.Переместить(ПеремещаемыйЭлемент, РодительскийЭлемент, ЭлементМестоположения);

КонецПроцедуры
&НаКлиенте
Процедура ИзменитьСвойствоЭлементаУправления(Свойство, Значение, ЭтоФорма, ИмяЭлемента) Экспорт
	ИзменитьСвойствоЭлементаУправленияНаСервере(Свойство, Значение, ЭтоФорма, ИмяЭлемента);
	ЭтаФорма.ОбновитьОтображениеДанных();

КонецПроцедуры

&НаСервере
Процедура ИзменитьСвойствоЭлементаУправленияНаСервере(Свойство, Значение, ЭтоФорма, ИмяЭлемента)
	ИскомыйЭлемент = Неопределено;
	Если ЭтоФорма Тогда
		ИскомыйЭлемент = ЭтаФорма;

	Иначе
		ИскомыйЭлемент = ЭтаФорма.Элементы.Найти(ИмяЭлемента);

	КонецЕсли;

	Если ИскомыйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;

	УстановитьИзменитьСвойство(ИскомыйЭлемент, Свойство, Значение);

КонецПроцедуры

&НаСервере
Процедура УстановитьИзменитьСвойство(ИскомыйЭлемент, Свойство, Значение)
	Если Свойство = "Группировка" Тогда
		Если ИскомыйЭлемент.Вид = ВидГруппыФормы.ГруппаКолонок Тогда
			ИскомыйЭлемент[Свойство] = ГруппировкаКолонок[Значение];

		Иначе
			ИскомыйЭлемент[Свойство] = ГруппировкаПодчиненныхЭлементовФормы[Значение];

		КонецЕсли;
	ИначеЕсли Свойство = "ОтображатьЗаголовок" Тогда
		ИскомыйЭлемент[Свойство] = Значение = "Да";

	ИначеЕсли Свойство = "Отображение" Тогда
		ИскомыйЭлемент.Отображение = ОтображениеГруппыКнопок[Значение];

	ИначеЕсли Свойство = "ОтображениеПодсказки" Тогда
		ИскомыйЭлемент.Отображение = ОтображениеПодсказки[Значение];

	ИначеЕсли Свойство = "ВидПереключателя" Тогда
		ИскомыйЭлемент[Свойство] = ВидПереключателя[Значение];

	ИначеЕсли Свойство = "ПоложениеЗаголовка" Тогда
		ИскомыйЭлемент[Свойство] = ПоложениеЗаголовкаЭлементаФормы[Значение];

	ИначеЕсли Свойство = "СписокВыбора" Тогда
		ИскомыйЭлемент[Свойство].ЗагрузитьЗначения(Значение.ВыгрузитьЗначения());

	ИначеЕсли Свойство = "Картинка" Тогда
		ИскомыйЭлемент[Свойство] = БиблиотекаКартинок.АктивироватьЗадачу;

	ИначеЕсли Свойство = "ГоризонтальноеПоложениеПодчиненных" Тогда
		ИскомыйЭлемент[Свойство] = ГоризонтальноеПоложениеЭлемента[Значение];

	ИначеЕсли Свойство = "ВертикальноеПоложениеПодчиненных" Тогда
		ИскомыйЭлемент[Свойство] = ВертикальноеПоложениеЭлемента[Значение];

	Иначе
		ИскомыйЭлемент[Свойство] = Значение;

	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьТипЗначения(Свойство, Значение, ЭтоФорма, ИмяЭлемента, Путь, СоставДаты) Экспорт
	ИзменитьТипЗначенияНаСервере(Свойство, Значение, ЭтоФорма, ИмяЭлемента, Путь, СоставДаты);
	ЭтаФорма.ОбновитьОтображениеДанных();

КонецПроцедуры

&НаСервере
Функция ИзменитьТипЗначенияНаСервере(Свойство, Значение, ЭтоФорма, ИмяЭлемента, Путь, СоставДаты)
	Результат = Ложь;

	ИскомыйРеквизит = НайтиРеквизитПоИмени(ИмяЭлемента, Путь);

	Если Не ПустаяСтрока(СоставДаты) Тогда
		КвалификаторДаты = Новый КвалификаторыДаты(ЧастиДаты[СоставДаты]);
		ИскомыйРеквизит.ТипЗначения = Новый ОписаниеТипов(Значение, , КвалификаторДаты);

	Иначе
		ИскомыйРеквизит.ТипЗначения = Новый ОписаниеТипов(Значение);

	КонецЕсли;

	ДобавляемыеРеквизиты = Новый Массив(1);
	ДобавляемыеРеквизиты[0] = ИскомыйРеквизит;

	УдаляемыеРеквизиты = Новый Массив(1);
	Если ПустаяСтрока(Путь) Тогда
		УдаляемыеРеквизиты[0] = ИмяЭлемента;

	Иначе
		УдаляемыеРеквизиты[0] = Путь + "." + ИмяЭлемента;

	КонецЕсли;

	ИзменитьРеквизиты(ДобавляемыеРеквизиты, УдаляемыеРеквизиты);

	Возврат Результат;
КонецФункции
&НаСервере
Функция НайтиРеквизитПоИмени(ИскомоеИмя, Путь)
	Результат = Неопределено;

	ВсеРеквизиты = ЭтаФорма.ПолучитьРеквизиты(Путь);
	Для Каждого Реквизит Из ВсеРеквизиты Цикл
		Если Реквизит.Имя = ИскомоеИмя Тогда
			Результат = Реквизит;

			Прервать;
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;
КонецФункции

&НаСервере
Процедура ДобавитьРеквизит(Имя, Тип, Путь = "")
	МассивДобавляемыхРеквизитов = Новый Массив;

	НовыйРеквизит = Новый РеквизитФормы(Имя, Новый ОписаниеТипов(Тип), Путь);
	МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

	ЭтаФорма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);

КонецПроцедуры

&НаСервере
Процедура ДобавитьКоманду(ИмяКоманды, Действие, Заголовок)
	НоваяКоманда = ЭтаФорма.Команды.Добавить(ИмяКоманды);
	НоваяКоманда.Действие = Действие;
	НоваяКоманда.Заголовок = Заголовок;
	НоваяКоманда.Отображение = ОтображениеКнопки.Текст;

КонецПроцедуры

//---

//@skip-warning
&НаКлиенте
Процедура ОбработатьКоманду(Команда)
	//Сообщить(Команда.Имя);

	ЭтотОбъект.ФорматированнаяСтрока1 = Новый ФорматированнаяСтрока("Товар ", Новый ФорматированнаяСтрока("Телевизор", ,
		WebЦвета.Красный, , "СсылкаНаТовар"), " отсутствует на складе"); 
	//ПодключитьОбработчикОжидания("Прогресс", 1, Истина);

КонецПроцедуры

&НаКлиенте
Процедура Прогресс() Экспорт
	Если ЭтотОбъект.Индикатор1 < 100 Тогда
		ЭтотОбъект.Индикатор1 = ЭтотОбъект.Индикатор1 + 10;

		ПодключитьОбработчикОжидания("Прогресс", 1, Истина);

	КонецЕсли;
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбработатьНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	ЗагрузитьКартинку(Элемент.Имя);

КонецПроцедуры

//---

&НаКлиенте
Процедура ЗагрузитьКартинку(ИмяРеквизита)
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);

	ПараметрыЗагрузкиКартинки = Новый Структура;
	ПараметрыЗагрузкиКартинки.Вставить("ИмяРеквизита", ИмяРеквизита);

	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьКартинкуПродолжение", ЭтотОбъект, ПараметрыЗагрузкиКартинки);

	ДиалогВыбораФайла.Показать(ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКартинкуПродолжение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	ОписаниеОповещенияОЗавершении = Новый ОписаниеОповещения("ЗагрузитьКартинкуЗавершение", ЭтотОбъект,
		ДополнительныеПараметры);
	НачатьПомещениеФайла(ОписаниеОповещенияОЗавершении, , , , ВыбранныеФайлы[0]);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКартинкуЗавершение(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт
	ЭтотОбъект[ДополнительныеПараметры.ИмяРеквизита] = ОписаниеПомещенногоФайла.Адрес;

КонецПроцедуры

//---

&НаКлиенте
Процедура ЭмулироватьПрогресс() Экспорт
	ТекущийЭлемент = Неопределено;

КонецПроцедуры